# Ce fichier va créer les services pour Docker
# - db : Instance MySQL pour la base de données
# - web : Serveur PHP/Apache & PhpMyAdmin pour faire fonctionner musikwald

version: '3.5'
services:
  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "7002:3306"
    # Permet de stocker les données en cas de rebuild
    volumes:
      - "~/.docker/var/lib/mysql/musikwald:/var/lib/mysql"
    networks:
      musikwald:
        aliases:
          # Nom du service sur le network musikwald
          - db
  web:
    build:
      context: .
    ports:
      # Port 80 mappé sur le port 7000
      - "7000:80"
    depends_on:
      # A besoin de "db" pour être fonctionnel
      - db
    restart: on-failure
    # Emplacement des fichiers pour apache
    volumes:
      - nfsmount:/var/www/html/musikwald:delegated
      - vendor:/var/www/html/musikwald/vendor
      - cache:/var/www/html/musikwald/var/cache

    networks:
      musikwald:
        aliases:
          - web
  pma:
    image: phpmyadmin/phpmyadmin:latest
    restart: on-failure
    networks:
      musikwald:
        aliases:
          - pma
    ports:
      - "7001:80"
    environment:
      PMA_HOST: ${PMA_HOST}
      PMA_ABSOLUTE_URI: ${PMA_ABSOLUTE_URI}
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
  encore:
    image: node:12-alpine
    volumes:
      - .:/app
    ports:
      - "${DEV_SERVER_PORT:-8080}:8080"
    working_dir: /app
    # Lance automatiquement le serveur yarn pour la compilation
    command: ["yarn", "dev-server", "--host=0.0.0.0"]
networks:
  musikwald:

# Améliore les performances sur OSX grace aux points de montage NFS
volumes:
  vendor:
  cache:
  nfsmount:
    driver: local
    driver_opts:
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
      device: ":${MUSIKWALD_PATH}"
